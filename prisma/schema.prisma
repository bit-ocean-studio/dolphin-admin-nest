datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native"]
  previewFeatures = ["metrics"]
}

/// 用户
model User {
  /// 唯一标识
  id          Int       @id @default(autoincrement())
  /// 用户名
  username    String    @unique @db.VarChar(30)
  /// 昵称
  nickName    String?   @map("nick_name") @db.VarChar(50)
  /// 密码
  password    String    @db.VarChar(100)
  /// 邮箱
  email       String?   @unique @db.VarChar(50)
  /// 手机号
  phoneNumber String?   @map("phone_number") @db.VarChar(25)
  /// 名
  firstName   String?   @map("first_name") @db.VarChar(10)
  /// 中间名
  middleName  String?   @map("middle_name") @db.VarChar(10)
  /// 姓
  lastName    String?   @map("last_name") @db.VarChar(10)
  /// 头像
  avatarUrl   String?   @map("avatar_url") @db.VarChar(100)
  /// 性别：数据字典
  gender      String?   @db.VarChar(50)
  /// 国家
  country     String?   @db.VarChar(25)
  /// 省份
  province    String?   @db.VarChar(25)
  /// 城市
  city        String?   @db.VarChar(25)
  /// 地址
  address     String?   @db.VarChar(100)
  /// 个人简介
  biography   String?   @db.VarChar(500)
  /// 个人网站
  website     String?   @db.VarChar(50)
  /// 个人主页
  profile     String?   @db.VarChar(50)
  /// 出生日期
  birthDate   DateTime? @map("birth_date") @db.Date
  /// 是否启用
  enabled     Boolean   @default(true)

  /// 用户 - 认证
  auths         Auth[]
  /// 用户 - 角色
  userRoles     UserRole[]
  /// 用户 - 部门
  userPositions UserPosition[]
  /// 设置
  userSettings  UserSetting[]
  /// 用户流量记录
  userTraffics  UserTraffic[]
  /// 登录日志
  loginLogs     LoginLog[]
  /// 操作日志
  operationLogs OperationLog[]

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_user")
}

/// 认证
model Auth {
  /// 唯一标识
  id       Int     @id @default(autoincrement())
  /// 认证类型：数据字典
  authType String  @map("auth_type") @db.VarChar(50)
  /// 认证唯一标识
  openId   String  @map("open_id") @db.VarChar(100)
  /// Token
  token    String? @map("token") @db.VarChar(255)
  /// 数据
  data     Json?   @db.Json

  /// 用户
  user   User @relation(fields: [userId], references: [id])
  /// 用户 ID
  userId Int  @map("user_id")

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@unique([authType, openId])
  @@map("system_auth")
}

/// 角色
model Role {
  /// 唯一标识
  id      Int     @id @default(autoincrement())
  /// 角色编码
  code    String  @unique @db.VarChar(50)
  /// 名称
  label   String  @db.VarChar(50)
  /// 备注
  remark  String? @db.VarChar(500)
  /// 是否启用
  enabled Boolean @default(true)
  /// 排序
  sort    Int     @default(0)

  /// 用户 - 角色
  userRoles       UserRole[]
  /// 角色 - 菜单
  roleMenuItems   RoleMenuItem[]
  /// 角色 - 部门
  roleDepartments RoleDepartment[]

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_role")
}

/// 用户 - 角色
model UserRole {
  /// 唯一标识
  id Int @id @default(autoincrement())

  /// 用户
  user   User @relation(fields: [userId], references: [id])
  /// 用户 ID
  userId Int  @map("user_id")

  /// 角色
  role   Role @relation(fields: [roleId], references: [id])
  /// 角色 ID
  roleId Int  @map("role_id")

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_user_role")
}

/// 菜单
model MenuItem {
  /// 唯一标识
  id            Int     @id @default(autoincrement())
  /// 类型
  type          String? @db.VarChar(50)
  /// URL 路径
  path          String? @db.VarChar(255)
  /// 图标
  icon          String? @db.VarChar(50)
  /// 组件路径
  componentPath String? @map("component_path") @db.VarChar(255)
  /// 权限编码
  code          String? @db.VarChar(255)
  /// 是否隐藏
  hidden        Boolean @default(false)
  /// 名称
  label         String  @db.VarChar(50)
  /// 备注
  remark        String? @db.VarChar(500)
  /// 是否启用
  enabled       Boolean @default(true)
  /// 排序
  sort          Int     @default(0)

  /// 父级菜单
  parent        MenuItem?      @relation("MenuItemToParent", fields: [parentId], references: [id])
  /// 父级菜单 ID
  parentId      Int?           @map("parent_id")
  /// 子级菜单
  children      MenuItem[]     @relation("MenuItemToParent")
  /// 角色 - 菜单
  roleMenuItems RoleMenuItem[]

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_menu_item")
}

/// 角色 - 菜单
model RoleMenuItem {
  /// 唯一标识
  id Int @id @default(autoincrement())

  /// 角色
  role   Role @relation(fields: [roleId], references: [id])
  /// 角色 ID
  roleId Int

  /// 菜单
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  /// 权限 ID
  menuItemId Int      @map("menu_id")

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_role_menu_item")
}

/// 部门
model Department {
  /// 唯一标识
  id          Int     @id @default(autoincrement())
  /// 负责人
  leader      String? @db.VarChar(50)
  /// 联系电话
  phoneNumber String? @map("phone_number") @db.VarChar(20)
  /// 邮箱
  email       String? @db.VarChar(50)
  /// 名称
  label       String  @db.VarChar(50)
  /// 备注
  remark      String? @db.VarChar(500)
  /// 是否启用
  enabled     Boolean @default(true)
  /// 排序
  sort        Int     @default(0)
  /// 祖先部门
  parentIds   Int[]   @map("parent_Ids")

  /// 父级部门
  parent          Department?      @relation("DepartmentToParent", fields: [parentId], references: [id])
  /// 父级部门 ID
  parentId        Int?             @map("parent_id")
  /// 子级部门
  children        Department[]     @relation("DepartmentToParent")
  /// 角色 - 部门
  roleDepartments RoleDepartment[]

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_department")
}

/// 角色 - 部门
model RoleDepartment {
  /// 唯一标识
  id Int @id @default(autoincrement())

  /// 角色
  role   Role @relation(fields: [roleId], references: [id])
  /// 角色 ID
  roleId Int

  /// 部门
  department   Department @relation(fields: [departmentId], references: [id])
  /// 部门 ID
  departmentId Int        @map("department_id")

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_role_department")
}

/// 职位
model Position {
  /// 唯一标识
  id      Int     @id @default(autoincrement())
  /// 职位编码
  code    String  @unique @db.VarChar(50)
  /// 名称
  label   String  @db.VarChar(50)
  /// 备注
  remark  String? @db.VarChar(500)
  /// 是否启用
  enabled Boolean @default(true)
  /// 排序
  sort    Int     @default(0)

  /// 用户 - 部门
  userPositions UserPosition[]

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_position")
}

/// 用户 - 职位
model UserPosition {
  /// 唯一标识
  id Int @id @default(autoincrement())

  /// 用户
  user       User     @relation(fields: [userId], references: [id])
  /// 用户 ID
  userId     Int      @map("user_id")
  /// 职位
  position   Position @relation(fields: [positionId], references: [id])
  /// 职位 ID
  positionId Int      @map("position_id")

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_user_position")
}

/// 用户设置
model UserSetting {
  /// 唯一标识
  id      Int     @id @default(autoincrement())
  /// 键
  key     String  @unique @db.VarChar(100)
  /// 值
  value   String  @db.VarChar(255)
  /// 名称
  label   String  @db.VarChar(50)
  /// 备注
  remark  String? @db.VarChar(500)
  /// 是否启用
  enabled Boolean @default(true)

  /// 用户
  user   User @relation(fields: [userId], references: [id])
  /// 用户 ID
  userId Int  @unique @map("user_id")

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_user_setting")
}

/// 系统设置
model Setting {
  /// 唯一标识
  id      Int     @id @default(autoincrement())
  /// 键
  key     String  @unique @db.VarChar(100)
  /// 值
  value   String  @db.VarChar(255)
  /// 名称
  label   String  @db.VarChar(50)
  /// 备注
  remark  String? @db.VarChar(500)
  /// 是否启用
  enabled Boolean @default(true)

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_setting")
}

/// 字典
model Dictionary {
  /// ID
  id      Int     @id @default(autoincrement())
  // 字典编码
  code    String  @unique @db.VarChar(50)
  /// 名称
  label   String  @db.VarChar(50)
  /// 备注
  remark  String? @db.VarChar(500)
  /// 是否启用
  enabled Boolean @default(true)

  /// 字典 - 字典数据
  dictionaryItems DictionaryItem[]

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_dictionary")
}

/// 字典数据
model DictionaryItem {
  /// 唯一标识
  id      Int     @id @default(autoincrement())
  /// 值
  value   String  @db.VarChar(255)
  /// 名称
  label   String  @db.VarChar(50)
  /// 备注
  remark  String? @db.VarChar(500)
  /// 是否启用
  enabled Boolean @default(true)
  /// 排序
  sort    Int     @default(0)

  /// 字典
  dictionary   Dictionary @relation(fields: [dictionaryId], references: [id])
  /// 字典 ID
  dictionaryId Int        @map("dictionary_id")

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_dictionary_item")
}

/// 系统通知
model Notification {
  /// 唯一标识
  id      Int     @id @default(autoincrement())
  /// 类型：数据字典
  type    String  @db.VarChar(50)
  /// 标题
  title   String  @db.VarChar(50)
  /// 内容
  content String? @db.VarChar(500)
  /// 备注
  remark  String? @db.VarChar(500)
  /// 是否启用
  enabled Boolean @default(true)

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  // 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  // 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  // 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_notification")
}

/// 用户流量记录
model UserTraffic {
  /// 唯一标识
  id        Int       @id @default(autoincrement())
  /// 应用名称
  app       String?   @db.VarChar(25)
  /// 应用版本
  version   String?   @db.VarChar(25)
  /// 应用环境
  env       String?   @db.VarChar(25)
  /// 访问来源（例如：Web 端、手机端、桌面端）
  source    String?   @db.VarChar(25)
  /// 用户代理
  userAgent String?   @map("user_agent") @db.VarChar(1000)
  /// 用户 IP
  ip        String?   @db.VarChar(25)
  /// 用户地区
  area      String?   @db.VarChar(100)
  /// 经度
  longitude Float?
  /// 纬度
  latitude  Float?
  /// 海拔
  altitude  Float?
  /// 进入页面时间
  enterAt   DateTime? @map("enter_at") @db.Timestamptz(3)
  /// 离开页面时间
  leaveAt   DateTime? @map("leave_at") @db.Timestamptz(3)
  /// 访问时长（毫秒）
  duration  Int?

  /// 用户
  user               User                @relation(fields: [userId], references: [id])
  /// 用户 ID
  userId             Int                 @map("user_id")
  /// 访问记录
  userTrafficRecords UserTrafficRecord[]

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_user_traffic")
}

/// 用户路由访问记录
model UserTrafficRecord {
  /// 唯一标识
  id       Int       @id @default(autoincrement())
  /// 路由标题
  title    String?   @db.VarChar(50)
  /// 路由 URL
  url      String?   @db.VarChar(255)
  /// 路由路径
  path     String?   @db.VarChar(255)
  /// 进入路由时间
  enterAt  DateTime? @map("enter_at") @db.Timestamptz(3)
  /// 离开路由时间
  leaveAt  DateTime? @map("leave_at") @db.Timestamptz(3)
  /// 停留时长（毫秒）
  duration Int?

  /// 用户流量记录
  userTraffic   UserTraffic @relation(fields: [userTrafficId], references: [id])
  /// 用户流量记录 ID
  userTrafficId Int         @map("user_traffic_id")

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  // 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_user_traffic_record")
}

/// 登录日志
model LoginLog {
  /// 唯一标识
  id        Int     @id @default(autoincrement())
  /// 登录类型：数据字典
  authType  String  @map("auth_type") @db.VarChar(50)
  /// 用户 IP
  ip        String? @db.VarChar(25)
  /// 用户地区
  area      String? @db.VarChar(100)
  /// 访问来源（例如：Web 端、手机端、桌面端）
  source    String? @db.VarChar(25)
  /// 用户代理
  userAgent String? @map("user_agent") @db.VarChar(1000)
  /// 提示信息
  message   String? @db.VarChar(255)
  /// 是否成功
  isSuccess Boolean @default(false) @map("is_success")

  /// 用户
  user   User @relation(fields: [userId], references: [id])
  /// 用户 ID
  userId Int  @map("user_id")

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_login_log")
}

/// 操作日志
model OperationLog {
  /// 唯一标识
  id                 Int     @id @default(autoincrement())
  /// 模块名称
  moduleName         String? @map("module_name") @db.VarChar(25)
  /// 操作类型
  type               String? @db.VarChar(25)
  /// 方法名称
  method             String? @db.VarChar(100)
  /// 请求方法
  requestMethod      String? @map("request_method") @db.VarChar(25)
  /// 请求路径
  requestUrl         String? @map("request_url") @db.VarChar(255)
  /// 请求查询参数
  requestQueries     Json?   @map("request_queries")
  /// 请求路径参数
  requestParams      Json?   @map("request_params")
  /// 请求体
  requestBody        Json?   @map("request_body")
  /// 响应体
  responseBody       Json?   @map("response_body")
  /// 响应状态码
  responseStatusCode Int?    @map("response_status_code")
  /// 响应业务码
  responseCode       String? @map("response_code") @db.VarChar(10)
  /// 错误信息
  errorMessage       String? @map("error_message") @db.VarChar(255)
  /// 操作时间
  duration           Int?
  /// 用户 IP
  ip                 String? @db.VarChar(25)
  /// 用户地区
  area               String? @db.VarChar(100)
  /// 访问来源（例如：Web 端、手机端、桌面端）
  source             String? @db.VarChar(25)
  /// 用户代理
  userAgent          String? @map("user_agent") @db.VarChar(1000)
  /// 提示信息
  message            String? @db.VarChar(255)
  /// 是否成功
  isSuccess          Boolean @default(false) @map("is_success")

  /// 用户
  user   User @relation(fields: [userId], references: [id])
  /// 用户 ID
  userId Int  @map("user_id")

  /// 创建时间
  createdAt DateTime? @default(now()) @map("created_at") @db.Timestamptz(3)
  /// 创建人
  createdBy Int?      @map("created_by")
  /// 更新时间
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamptz(3)
  /// 更新人
  updatedBy Int?      @map("updated_by")
  /// 删除时间
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz(3)
  /// 删除人
  deletedBy Int?      @map("deleted_by")

  @@map("system_operation_log")
}
