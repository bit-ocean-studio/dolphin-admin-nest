{
  "name": "dolphin-admin-nest",
  "description": "Dolphin Admin Nest is the back-end service of Dolphin Admin, based on Nest.js, TypeScript, Prisma and PostgresSQL.",
  "author": "Bruce Song <recall4056@gmail.com> (https://github.com/recallwei/)",
  "version": "0.0.1",
  "scripts": {
    "start": "dotenv -e .env.development -- nest start -- -b swc",
    "dev": "dotenv -e .env.development -- nest start --watch -- -b swc",
    "pm2:dev": "dotenv -e .env.development -- pnpm pm2 start ecosystem.config.js --env development",
    "docker:dev": "docker-compose up -d && pnpm pm2:dev",
    "debug": "nest start --debug --watch",
    "build": "nest build",
    "deploy": "pnpm pm2 reload ecosystem.config.js --env production",
    "generate:resource": "nest g resource",
    "generate:controller": "nest g controller",
    "generate:service": "nest g service",
    "docs:start": "npx compodoc -s",
    "docs:generate": "npx compodoc -p tsconfig.doc.json -n \"Dolphin Admin Nest API Docs\"",
    "preview": "node dist/main",
    "type:check": "tsc --pretty --noEmit",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "prisma:generate": "prisma generate",
    "prisma:generate:watch": "prisma generate --watch",
    "prisma:migrate:dev": "dotenv -e .env.development -- prisma migrate dev --skip-seed",
    "prisma:migrate:deploy": "dotenv -e .env.production -- prisma migrate deploy",
    "prisma:seed": "dotenv -e .env.development -- prisma db seed",
    "prisma:reset": "prisma migrate reset",
    "prisma:studio": "prisma studio",
    "prisma:validate": "prisma validate",
    "prisma:format": "prisma format",
    "cspell:check": "cspell \"**\"",
    "eslint:check": "eslint \"**/*.{js,ts}\" --color",
    "eslint:fix": "pnpm eslint:check --fix",
    "prettier:check": "prettier --check --ignore-unknown .",
    "prettier:fix": "prettier --write --ignore-unknown .",
    "cz": "git-cz",
    "preinstall": "npx only-allow pnpm",
    "prepare": "husky install"
  },
  "dependencies": {
    "@nestjs/axios": "^3.0.0",
    "@nestjs/common": "^10.2.6",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.2.6",
    "@nestjs/mapped-types": "2.0.2",
    "@nestjs/platform-express": "^10.2.6",
    "@nestjs/platform-socket.io": "^10.2.6",
    "@nestjs/serve-static": "^4.0.0",
    "@nestjs/swagger": "^7.1.12",
    "@nestjs/websockets": "^10.2.6",
    "@ngneat/falso": "^7.1.1",
    "@node-rs/bcrypt": "^1.7.3",
    "@prisma/client": "^5.3.1",
    "axios": "^1.5.1",
    "chalk": "4.1.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "dayjs": "^1.11.10",
    "express": "^4.18.2",
    "figlet": "^1.6.0",
    "gradient-string": "^2.0.2",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "morgan": "^1.10.0",
    "multer": "1.4.5-lts.1",
    "nestjs-i18n": "^10.3.5",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "socket.io": "^4.7.2",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@brucesong/eslint-config-ts": "^1.0.8",
    "@commitlint/cli": "^17.7.2",
    "@commitlint/config-conventional": "^17.7.0",
    "@compodoc/compodoc": "^1.1.21",
    "@nestjs/cli": "^10.1.18",
    "@nestjs/schematics": "^10.0.2",
    "@types/figlet": "^1.5.6",
    "@types/gradient-string": "^1.1.3",
    "@types/jsonwebtoken": "^9.0.3",
    "@types/morgan": "^1.9.6",
    "@types/multer": "^1.4.8",
    "commitizen": "^4.3.0",
    "cspell": "^7.3.7",
    "cz-git": "^1.7.1",
    "eslint": "^8.50.0",
    "husky": "^8.0.3",
    "lint-staged": "^14.0.1",
    "pm2": "^5.3.0",
    "prettier": "^3.0.3",
    "prisma": "^5.3.1"
  },
  "prisma": {
    "schema": "prisma/schema.prisma",
    "seed": "tsx prisma/seed.ts"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "config": {
    "commitizen": {
      "path": "node_modules/cz-git"
    }
  },
  "private": true,
  "license": "MIT"
}
